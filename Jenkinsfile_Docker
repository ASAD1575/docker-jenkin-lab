pipeline {
    agent any

    environment {
        AWS_ACCOUNT_ID     = "375299695019"
        AWS_DEFAULT_REGION = "eu-north-1"
        IMAGE_REPO_NAME    = "jenkins-pipeline"
        IMAGE_TAG          = "latest"
        REPOSITORY_URI     = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}"
    }

    stages {
        stage('Terraform Init') {
            steps {
                script {
                    sh "terraform init"
                }
            }
        }
        
        stage('Terraform Plan') {
            steps {
                script {
                    sh "terraform plan"
                }
            }
        }

        stage('Terraform Validate') {
            steps {
                script {
                    sh "terraform validate"
                }
            }
        }

        stage('Terraform Apply') {
            steps {
                script {
                    sh "terraform apply -auto-approve"
                }
            }
        }
        
        stage('Get ECR Repository URI from Terraform') {
            steps {
                script {
                    env.REPOSITORY_URI = sh(
                        script: "terraform output -raw ecr_repository_uri",
                        returnStdout: true
                    ).trim()
                echo "ECR URI: ${env.REPOSITORY_URI}"
                }
            }
        }


        stage('Logging into AWS ECR') {
            steps {
                script {
                    sh "aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${REPOSITORY_URI}"
                }
            }
        }

        stage('Cloning Git') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/main']],
                    userRemoteConfigs: [[
                        credentialsId: '', // Add GitHub credential ID if private repo
                        url: 'https://github.com/ASAD1575/docker-jenkin-lab.git'
                    ]]
                ])
            }
        }

        stage('Building Docker Image') {
            steps {
                script {
                    sh "docker build -t ${IMAGE_REPO_NAME}:${IMAGE_TAG} ."
                }
            }
        }

        stage('Pushing to ECR') {
            steps {
                script {
                    sh "docker tag ${IMAGE_REPO_NAME}:${IMAGE_TAG} ${REPOSITORY_URI}:${IMAGE_TAG}"
                    sh "docker push ${REPOSITORY_URI}:${IMAGE_TAG}"
                }
            }
        }
        
    }
}
